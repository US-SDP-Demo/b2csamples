<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="yourtenant.onmicrosoft.com" 
    PolicyId="B2C_1A_SignIn_HRD" PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_SignIn_HRD" 
    TenantObjectId="yourtenant.onmicrosoft.com">
    <BasePolicy>
        <TenantId>yourtenant.onmicrosoft.com</TenantId>
        <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
    </BasePolicy>
    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="signInName">
                <DisplayName>Enter your Email address</DisplayName>
                <UserHelpText>Email address to use for signing in.</UserHelpText>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$" HelpText="The email you provided is not valid." />
                </Restriction>
            </ClaimType>
            <ClaimType Id="email">
                <UserInputType>Readonly</UserInputType>
            </ClaimType>            
            <ClaimType Id="domain_hint">
                <DisplayName>domainParameter</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>parsed domain value from url</UserHelpText>
            </ClaimType>
            <ClaimType Id="isKnownDomain">
                <DisplayName>knownDomain</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText>if this a domain that is a customer</UserHelpText>
            </ClaimType>
            <ClaimType Id="idp">
                <DisplayName>IdP</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Known idp tp</UserHelpText>
            </ClaimType>            
        </ClaimsSchema>
    </BuildingBlocks>

    <ClaimsProviders>

        <ClaimsProvider>
            <DisplayName>Custom REST API</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="REST-HRD">
                <DisplayName>Validate user input data and return loyaltyNumber claim</DisplayName>
                <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                <Metadata>
                    <Item Key="ServiceUrl">{HRD_API}</Item>
                    <Item Key="AuthenticationType">None</Item>
                    <Item Key="SendClaimsIn">QueryString</Item>
                    <Item Key="AllowInsecureAuthInProduction">true</Item>            
                </Metadata>
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="email" />
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="isKnownDomain" />
                    <OutputClaim ClaimTypeReferenceId="idp" />
                    <OutputClaim ClaimTypeReferenceId="domain_hint" />          
                    <OutputClaim ClaimTypeReferenceId="email" />                                         
                </OutputClaims>
                <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <Domain>organizations</Domain>
            <DisplayName>Work and school accounts</DisplayName>
            <TechnicalProfiles>
              <TechnicalProfile Id="WORK-OIDC">
                <DisplayName>Work or school account</DisplayName>
                <Description>Login with your work or school account</Description>
                <Protocol Name="OpenIdConnect" />
                <Metadata>
                  <Item Key="METADATA">https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration</Item>
                  <!-- Update the Client ID below to the Application ID -->
                  <Item Key="client_id">{Clients:Work}</Item>
                  <Item Key="IdTokenAudience">{Clients:Work}</Item>                  
                  <Item Key="response_types">code</Item>
                  <Item Key="scope">openid profile email</Item>
                  <Item Key="response_mode">form_post</Item>
                  <Item Key="HttpBinding">POST</Item>
                  <Item Key="UsePolicyInRedirectUri">false</Item>
                  <Item Key="DiscoverMetadataByTokenIssuer">true</Item>
                  <!-- The key below allows you to specify each of the Azure AD tenants that can be used to sign in. Update the GUIDs below for each tenant. -->
                  <!--Item Key="ValidTokenIssuerPrefixes">https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000,https://login.microsoftonline.com/11111111-1111-1111-1111-111111111111</Item-->
                  <!-- The commented key below specifies that users from any tenant can sign-in. Uncomment if you would like anyone with an Azure AD account to be able to sign in. -->
                  <Item Key="ValidTokenIssuerPrefixes">https://login.microsoftonline.com/</Item>
                  <Item Key="ClaimTypeOnWhichToEnable">idp</Item>
                  <Item Key="ClaimValueOnWhichToEnable">aad</Item>                  
                </Metadata>
                <CryptographicKeys>
                  <Key Id="client_secret" StorageReferenceId="B2C_1A_WORKAppSecret" />
                </CryptographicKeys>
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="login_hint" />
                </InputClaims>
                <OutputClaims>
                  <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid" />
                  <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid" />
                  <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                  <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
                  <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                  <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
                  <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
                  <OutputClaim ClaimTypeReferenceId="email" />
                </OutputClaims>
                <OutputClaimsTransformations>
                  <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName" />
                  <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName" />
                  <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
                  <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId" />
                </OutputClaimsTransformations>
                <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin" />
                <EnabledForUserJourneys>OnClaimsExistence</EnabledForUserJourneys>                       
              </TechnicalProfile>       
            </TechnicalProfiles>
        </ClaimsProvider>
        <ClaimsProvider>
            <Domain>live.com</Domain>
            <DisplayName>Microsoft Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="MSA-OIDC">
                    <DisplayName>Microsoft Account</DisplayName>
                    <Protocol Name="OpenIdConnect" />
                    <Metadata>
                        <Item Key="ProviderName">https://login.live.com</Item>
                        <Item Key="METADATA">https://login.live.com/.well-known/openid-configuration</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="scope">openid profile email</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="UsePolicyInRedirectUri">0</Item>
                        <Item Key="client_id">{Clients:MSA}</Item>
                        <Item Key="ClaimTypeOnWhichToEnable">idp</Item>
                        <Item Key="ClaimValueOnWhichToEnable">msa</Item>     
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_MSASecret" />
                    </CryptographicKeys>
                    <InputClaims>
                        <!--Demo: pass the login_hint to Azure AD home realm discovery page-->
                        <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="login_hint" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="live.com" />
                        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" />
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName" />
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName" />
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
                        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId" />
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin" />
                    <EnabledForUserJourneys>OnClaimsExistence</EnabledForUserJourneys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <!--Demo: This technical profile collects the sign-in email address and extracts the sign-in domain name -->
        <ClaimsProvider>
            <DisplayName>Local Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-Signin-Email">
                    <DisplayName>Local Account Signin</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
                    </Metadata>
                    <IncludeInSso>false</IncludeInSso>
                    <InputClaims>
                        <!--InputClaim ClaimTypeReferenceId="signInName" DefaultValue="{OIDC:LoginHint}" AlwaysUseDefaultValue="true" /-->
                        <InputClaim ClaimTypeReferenceId="signInName" />                        
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
                        <OutputClaim ClaimTypeReferenceId="idp" />
                        <OutputClaim ClaimTypeReferenceId="isKnownDomain" />
                        <OutputClaim ClaimTypeReferenceId="domain_hint" />     
                        <OutputClaim ClaimTypeReferenceId="email" />                                                                            
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="REST-HRD" />
                    </ValidationTechnicalProfiles>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- Disable Sign Up-->
        <ClaimsProvider>
            <DisplayName>Local Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
                    <Metadata>
                        <Item Key="setting.showSignupLink">false</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
    </ClaimsProviders>

    <UserJourneys>
        <UserJourney Id="SignIn">

            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="SigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-Signin-Email" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- If the domain_hint did not match any known domain, then redirect to a default local account sign in-->
                <OrchestrationStep Order="2" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
                    <Preconditions>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsProviderSelections>
                        <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
                    </ClaimsProviderSelections>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
                    </ClaimsExchanges>
                </OrchestrationStep>
                <!-- dont run this step if the domain was known, or we have an objectid (local account sign in)-->
                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- If the domain matched any known domain, then this step will have a single IdP
                    enabled due to each known IdP TP having an enablement flag via identityProviders claim -->
                <OrchestrationStep Order="4" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections">
                    <Preconditions>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsProviderSelections>
                        <ClaimsProviderSelection TargetClaimsExchangeId="AADOIDC" />
                        <ClaimsProviderSelection TargetClaimsExchangeId="MSAOIDC" />
                    </ClaimsProviderSelections>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADOIDC" TechnicalProfileReferenceId="WORK-OIDC" />
                        <ClaimsExchange Id="MSAOIDC" TechnicalProfileReferenceId="MSA-OIDC" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- For social IDP authentication, attempt to find the user account in the directory. -->
                <OrchestrationStep Order="6" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserReadUsingAlternativeSecurityId" TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId-NoError" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- Still dont have objectId (social idp user that doesnt yet exist) - write the account -->
                <OrchestrationStep Order="7" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserWrite" TechnicalProfileReferenceId="AAD-UserWriteUsingAlternativeSecurityId" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="8" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                            <Value>isKnownDomain</Value>
                            <Value>True</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="9" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
            <ClientDefinition ReferenceId="DefaultWeb" />
        </UserJourney>
    </UserJourneys>

    <RelyingParty>
        <DefaultUserJourney ReferenceId="SignIn" />
        <TechnicalProfile Id="PolicyProfile">
            <DisplayName>PolicyProfile</DisplayName>
            <Protocol Name="OpenIdConnect" />
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="firstname"/>
                <OutputClaim ClaimTypeReferenceId="surname" PartnerClaimType="surname"/>
                <OutputClaim ClaimTypeReferenceId="identityProvider" />
                <OutputClaim ClaimTypeReferenceId="email" />
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub" />
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>